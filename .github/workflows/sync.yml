name: Sync Github To Image

on:
  workflow_run:
    workflows: ["Publish Release"]  # 监听的工作流名称
    types:
      - completed  # 监听完成事件
  push:
    branches: [main]
  #schedule:
    # 定时任务，每天 UTC 时间 0 点运行
    #- cron: "0 0 * * *"
  workflow_dispatch:


jobs:
  sync-gitlink:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 为了 git pull --unshallow，我们需要获取所有的提交历史

      - name: Set up Git user
        run: |
          git config --global user.email "wangfj11@foxmail.com"
          git config --global user.name "AlianBlank"

      - name: Set SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.GITLINK_ID_RSA }}" >> ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval $(ssh-agent -s) && ssh-add ~/.ssh/id_rsa
          # 信任域名
          ssh-keyscan -H code.gitlink.org.cn >> ~/.ssh/known_hosts

      # 查看当前分支
      - name: Check current branch
        run: echo 当前分支：${{ github.ref_name }} ${{ github.Repository }}

      # 查看远端 地址
      - name: echo git url
        run: echo git@code.gitlink.org.cn:${{ github.Repository }}.git

      # 添加远端
      - name: add remote url
        run: git remote add mirror "git@code.gitlink.org.cn:${{ github.Repository }}.git"

      # 获取
      - name: fetch
        run: git fetch --prune mirror --tags --verbose

      # 拉取和推送
      - name: pull and push
        run: | 
          if [ "${{ github.ref_name }}" ]; then
          git checkout ${{ github.ref_name }}
          git push -f mirror ${{ github.ref_name }}
          git push -f mirror --tags --verbose
          fi


  sync-gitlab:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 为了 git pull --unshallow，我们需要获取所有的提交历史

      - name: Set up Git user
        run: |
          git config --global user.email "wangfj11@foxmail.com"
          git config --global user.name "AlianBlank"

      - name: Set SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.GITLAB_ID_RSA }}" >> ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval $(ssh-agent -s) && ssh-add ~/.ssh/id_rsa
          # 信任域名
          ssh-keyscan -H gitlab.com >> ~/.ssh/known_hosts
      # 查看当前分支
      - name: Check current branch
        run: echo 当前分支：${{ github.ref_name }} ${{ github.Repository }}
      # 查看远端 地址
      - name: echo git url
        run: echo git@gitlab.com:${{ github.Repository }}.git

      # 添加远端
      - name: add remote url
        run: git remote add mirror "git@gitlab.com:${{ github.Repository }}.git"

      # 获取
      - name: fetch
        run: git fetch --prune mirror --tags --verbose

      # 拉取和推送
      - name: pull and push
        run: | 
          if [ "${{ github.ref_name }}" ]; then
          git checkout ${{ github.ref_name }}
          git push -f mirror ${{ github.ref_name }}
          git push -f mirror --tags --verbose
          fi


  sync-gitee:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 为了 git pull --unshallow，我们需要获取所有的提交历史

      - name: Set up Git user
        run: |
          git config --global user.email "wangfj11@foxmail.com"
          git config --global user.name "AlianBlank"

      - name: Set SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.GITEE_ID_RSA }}" >> ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval $(ssh-agent -s) && ssh-add ~/.ssh/id_rsa
          # 信任域名
          ssh-keyscan -H gitee.com >> ~/.ssh/known_hosts
      # 查看当前分支
      - name: Check current branch
        run: echo 当前分支：${{ github.ref_name }} ${{ github.Repository }}
      # 查看远端 地址
      - name: echo git url
        run: echo git@gitee.com:${{ github.Repository }}.git

      # 添加远端
      - name: add remote url
        run: git remote add mirror "git@gitee.com:${{ github.Repository }}.git"

      # 获取
      - name: fetch
        run: git fetch --prune mirror --tags --verbose

      # 拉取和推送
      - name: pull and push
        run: | 
          if [ "${{ github.ref_name }}" ]; then
          git checkout ${{ github.ref_name }}
          git push -f mirror ${{ github.ref_name }}
          git push -f mirror --tags --verbose
          fi


  sync-atomgit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 为了 git pull --unshallow，我们需要获取所有的提交历史

      - name: Set up Git user
        run: |
          git config --global user.email "wangfj11@foxmail.com"
          git config --global user.name "AlianBlank"

      - name: Set SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.ATOMGIT_ID_RSA }}" >> ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval $(ssh-agent -s) && ssh-add ~/.ssh/id_rsa
          # 信任域名
          ssh-keyscan -H atomgit.com >> ~/.ssh/known_hosts
      # 查看当前分支
      - name: Check current branch
        run: echo 当前分支：${{ github.ref_name }} ${{ github.Repository }}
      # 查看远端 地址
      - name: echo git url
        run: echo git@atomgit.com:${{ github.Repository }}.git

      # 添加远端
      - name: add remote url
        run: git remote add mirror "git@atomgit.com:${{ github.Repository }}.git"

      # 获取
      - name: fetch
        run: git fetch --prune mirror --tags --verbose

      # 拉取和推送
      - name: pull and push
        run: | 
          if [ "${{ github.ref_name }}" ]; then
          git checkout ${{ github.ref_name }}
          git push -f mirror ${{ github.ref_name }}
          git push -f mirror --tags --verbose
          fi


  sync-gitcode:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 为了 git pull --unshallow，我们需要获取所有的提交历史

      - name: Set up Git user
        run: |
          git config --global user.email "wangfj11@foxmail.com"
          git config --global user.name "AlianBlank"

      - name: Set SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.GITCODE_ID_RSA }}" >> ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval $(ssh-agent -s) && ssh-add ~/.ssh/id_rsa
          # 信任域名
          ssh-keyscan -H gitcode.net >> ~/.ssh/known_hosts
      # 查看当前分支
      - name: Check current branch
        run: echo 当前分支：${{ github.ref_name }} ${{ github.Repository }}
      # 查看远端 地址
      - name: echo git url
        run: echo git@gitcode.net:${{ github.Repository }}.git

      # 添加远端
      - name: add remote url
        run: git remote add mirror "git@gitcode.net:${{ github.Repository }}.git"

      # 获取
      - name: fetch
        run: git fetch --prune mirror --tags --verbose

      # 拉取和推送
      - name: pull and push
        run: | 
          if [ "${{ github.ref_name }}" ]; then
          git checkout ${{ github.ref_name }}
          git push -f mirror ${{ github.ref_name }}
          git push -f mirror --tags --verbose
          fi

  
  sync-framagit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 为了 git pull --unshallow，我们需要获取所有的提交历史

      - name: Set up Git user
        run: |
          git config --global user.email "wangfj11@foxmail.com"
          git config --global user.name "AlianBlank"

      - name: Set SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.FRAMAGIT_ID_RSA }}" >> ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval $(ssh-agent -s) && ssh-add ~/.ssh/id_rsa
          # 信任域名
          ssh-keyscan -H framagit.org >> ~/.ssh/known_hosts
      # 查看当前分支
      - name: Check current branch
        run: echo 当前分支：${{ github.ref_name }} ${{ github.Repository }}
      # 查看远端 地址
      - name: echo git url
        run: echo git@framagit.org:${{ github.Repository }}.git

      # 添加远端
      - name: add remote url
        run: git remote add mirror "git@framagit.org:${{ github.Repository }}.git"

      # 获取
      - name: fetch
        run: git fetch --prune mirror --tags --verbose

      # 拉取和推送
      - name: pull and push
        run: | 
          if [ "${{ github.ref_name }}" ]; then
          git checkout ${{ github.ref_name }}
          git push -f mirror ${{ github.ref_name }}
          git push -f mirror --tags --verbose
          fi
